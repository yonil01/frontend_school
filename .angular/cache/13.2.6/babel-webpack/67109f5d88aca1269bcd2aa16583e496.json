{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Repositories\\\\Trabajo\\\\ecatch-web-config\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { editAttribute } from \"@app/core/store/actions/entity.action\";\nimport { v4 as uuidv4 } from 'uuid';\nlet EntityAddDatasetComponent = class EntityAddDatasetComponent {\n  constructor(datasetsService, entityService, store) {\n    this.datasetsService = datasetsService;\n    this.entityService = entityService;\n    this.store = store;\n    this.datasets = [];\n    this.datasetForm = new FormControl(null);\n  }\n\n  ngOnInit() {\n    this.datasetsService.getDatasets().subscribe(res => {\n      var _a;\n\n      this.datasets = res.data;\n      console.log(this.datasets);\n\n      if ((_a = this.attribute) === null || _a === void 0 ? void 0 : _a.entities_attributes_dataset) {\n        const dataset = this.datasets.find(dts => dts.id.toLowerCase() === this.attribute.entities_attributes_dataset.id.toLowerCase());\n        this.datasetForm.setValue(dataset);\n      } else {\n        this.datasetForm.setValue(null);\n      }\n    });\n  }\n\n  save() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      if ((_a = _this.attribute) === null || _a === void 0 ? void 0 : _a.entities_attributes_dataset) {\n        yield _this.deleteAttributeDataset();\n      }\n\n      if (_this.datasetForm.value) {\n        const attributeDatasetPersistence = {\n          id: uuidv4().toLowerCase(),\n          attributes_id: _this.attribute.id.toLowerCase(),\n          dataset_id: _this.datasetForm.value.id.toLowerCase()\n        };\n\n        _this.entityService.createAttributeDataset(attributeDatasetPersistence).subscribe(res => {\n          if (!res.error) {\n            const attribute = Object.assign(Object.assign({}, _this.attribute), {\n              entities_attributes_dataset: _this.datasetForm.value\n            });\n\n            _this.store.dispatch(editAttribute({\n              attribute: attribute\n            }));\n\n            _this.datasetForm.setValue(null);\n          } // this.responseSaveAttributeDataset.emit(res);\n\n        });\n      } else {\n        const attribute = Object.assign(Object.assign({}, _this.attribute), {\n          entities_attributes_dataset: null\n        });\n\n        _this.store.dispatch(editAttribute({\n          attribute: attribute\n        })); // this.responseSaveAttributeDataset.emit(null);\n\n      }\n    })();\n  }\n\n  deleteAttributeDataset() {\n    return new Promise((resolv, rej) => {\n      this.entityService.DeleteAttributeDatasetByAttIDAndDatasetID(this.attribute.id.toLowerCase(), this.attribute.entities_attributes_dataset.id.toLowerCase()).subscribe(res => {\n        if (res.error) rej(true);\n        resolv(!res.error);\n      });\n    });\n  }\n\n  cancel() {// this.cancelAndReturn.emit();\n  }\n\n};\n\n__decorate([Input()], EntityAddDatasetComponent.prototype, \"attribute\", void 0);\n\nEntityAddDatasetComponent = __decorate([Component({\n  selector: 'app-entity-add-dataset',\n  templateUrl: './entity-add-dataset.component.html',\n  styleUrls: ['./entity-add-dataset.component.scss']\n})], EntityAddDatasetComponent);\nexport { EntityAddDatasetComponent };","map":{"version":3,"sources":["D:/Repositories/Trabajo/ecatch-web-config/src/app/modules/wizard/entidades/components/entity-add-dataset/entity-add-dataset.component.ts"],"names":["__decorate","Component","Input","FormControl","editAttribute","v4","uuidv4","EntityAddDatasetComponent","constructor","datasetsService","entityService","store","datasets","datasetForm","ngOnInit","getDatasets","subscribe","res","_a","data","console","log","attribute","entities_attributes_dataset","dataset","find","dts","id","toLowerCase","setValue","save","deleteAttributeDataset","value","attributeDatasetPersistence","attributes_id","dataset_id","createAttributeDataset","error","Object","assign","dispatch","Promise","resolv","rej","DeleteAttributeDatasetByAttIDAndDatasetID","cancel","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { editAttribute } from \"@app/core/store/actions/entity.action\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nlet EntityAddDatasetComponent = class EntityAddDatasetComponent {\r\n    constructor(datasetsService, entityService, store) {\r\n        this.datasetsService = datasetsService;\r\n        this.entityService = entityService;\r\n        this.store = store;\r\n        this.datasets = [];\r\n        this.datasetForm = new FormControl(null);\r\n    }\r\n    ngOnInit() {\r\n        this.datasetsService.getDatasets().subscribe((res) => {\r\n            var _a;\r\n            this.datasets = res.data;\r\n            console.log(this.datasets);\r\n            if ((_a = this.attribute) === null || _a === void 0 ? void 0 : _a.entities_attributes_dataset) {\r\n                const dataset = this.datasets.find((dts) => dts.id.toLowerCase() === this.attribute.entities_attributes_dataset.id.toLowerCase());\r\n                this.datasetForm.setValue(dataset);\r\n            }\r\n            else {\r\n                this.datasetForm.setValue(null);\r\n            }\r\n        });\r\n    }\r\n    async save() {\r\n        var _a;\r\n        if ((_a = this.attribute) === null || _a === void 0 ? void 0 : _a.entities_attributes_dataset) {\r\n            await this.deleteAttributeDataset();\r\n        }\r\n        if (this.datasetForm.value) {\r\n            const attributeDatasetPersistence = {\r\n                id: uuidv4().toLowerCase(),\r\n                attributes_id: this.attribute.id.toLowerCase(),\r\n                dataset_id: this.datasetForm.value.id.toLowerCase(),\r\n            };\r\n            this.entityService.createAttributeDataset(attributeDatasetPersistence).subscribe((res) => {\r\n                if (!res.error) {\r\n                    const attribute = Object.assign(Object.assign({}, this.attribute), { entities_attributes_dataset: this.datasetForm.value });\r\n                    this.store.dispatch(editAttribute({ attribute: attribute }));\r\n                    this.datasetForm.setValue(null);\r\n                }\r\n                // this.responseSaveAttributeDataset.emit(res);\r\n            });\r\n        }\r\n        else {\r\n            const attribute = Object.assign(Object.assign({}, this.attribute), { entities_attributes_dataset: null });\r\n            this.store.dispatch(editAttribute({ attribute: attribute }));\r\n            // this.responseSaveAttributeDataset.emit(null);\r\n        }\r\n    }\r\n    deleteAttributeDataset() {\r\n        return new Promise((resolv, rej) => {\r\n            this.entityService\r\n                .DeleteAttributeDatasetByAttIDAndDatasetID(this.attribute.id.toLowerCase(), this.attribute.entities_attributes_dataset.id.toLowerCase())\r\n                .subscribe((res) => {\r\n                if (res.error)\r\n                    rej(true);\r\n                resolv(!res.error);\r\n            });\r\n        });\r\n    }\r\n    cancel() {\r\n        // this.cancelAndReturn.emit();\r\n    }\r\n};\r\n__decorate([\r\n    Input()\r\n], EntityAddDatasetComponent.prototype, \"attribute\", void 0);\r\nEntityAddDatasetComponent = __decorate([\r\n    Component({\r\n        selector: 'app-entity-add-dataset',\r\n        templateUrl: './entity-add-dataset.component.html',\r\n        styleUrls: ['./entity-add-dataset.component.scss']\r\n    })\r\n], EntityAddDatasetComponent);\r\nexport { EntityAddDatasetComponent };\r\n"]},"metadata":{},"sourceType":"module"}