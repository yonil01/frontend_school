{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Repositories\\\\Trabajo\\\\ecatch-web-config\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet EntityAddValuesComponent = class EntityAddValuesComponent {\n  constructor(_localStorage, autofillsService) {\n    this._localStorage = _localStorage;\n    this.autofillsService = autofillsService;\n    this.nameClient = '';\n    this.nameProject = '';\n    this.isReturn = new EventEmitter();\n    this.onSelectAutofills = false;\n    this.attributes = [];\n    this.isDelete = false;\n    this.showValues = true;\n    this.attributeAutofills = [];\n    this.ResponsevaluesAttributesAutofills = [];\n    this.valuesAttributesAutofills = [];\n    this.ResponseAtrributesOfAutofills = [];\n    this.AttributesOfAutofills = [];\n    this.hasAttribute = true;\n    this.columnsTable = [];\n    this.nameClient = this._localStorage.getClient();\n    this.nameProject = this._localStorage.getProject();\n  }\n\n  ngOnInit() {\n    this.isBlock = true;\n\n    if (this.selectedAutofill) {\n      this.getAttributeAutofills();\n      this.getAutofillValues();\n    } else {\n      this.isBlock = false;\n    }\n  }\n\n  getAutofillValues() {\n    this.autofillsService.getAllAutofillValues(this.selectedAutofill.id.toLowerCase()).subscribe(res => {\n      var _a, _b;\n\n      if ((_b = (_a = res.data) === null || _a === void 0 ? void 0 : _a.autofill_response) === null || _b === void 0 ? void 0 : _b.length) {\n        this.ResponsevaluesAttributesAutofills = res.data.autofill_response;\n        this.ResponsevaluesAttributesAutofills.forEach(value => {\n          let valueTemp = value;\n          delete valueTemp.id;\n          delete valueTemp.created_at;\n          delete valueTemp.updated_at;\n          this.valuesAttributesAutofills.push(valueTemp);\n        });\n        this.columnsTable = Object.keys(this.valuesAttributesAutofills[0]);\n        console.log('columnsTable');\n        console.log(this.columnsTable);\n        console.log('valuesAttributesAutofills');\n        console.log(this.valuesAttributesAutofills);\n      } else {\n        this.ResponsevaluesAttributesAutofills = [];\n      }\n    });\n  }\n\n  getAttributeAutofills() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.autofillsService.getAttributeAutofillsByAutofillID(_this.selectedAutofill.id.toLowerCase()).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (res) {\n          _this.ResponseAtrributesOfAutofills = res.data;\n\n          for (const autofill of _this.ResponseAtrributesOfAutofills) {\n            _this.AttributesOfAutofills.push(autofill.attribute);\n          }\n\n          console.log('AttributesOfAutofills');\n          console.log(_this.AttributesOfAutofills);\n          _this.isBlock = false;\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      _this.isBlock = false;\n    })();\n  }\n\n  onReturn() {\n    this.isReturn.emit({\n      id: 'autofills',\n      from: 'addValues',\n      value: true\n    });\n  }\n\n  cancelDelete() {\n    this.isDelete = false;\n  }\n\n  sureDelete(i) {\n    if (this.attributes) {\n      this.isDelete = true;\n    }\n  }\n\n  onAddDatasets(i) {\n    this.showValues = false;\n  }\n\n  onCreateValue() {}\n\n};\n\n__decorate([Input()], EntityAddValuesComponent.prototype, \"selectedAutofill\", void 0);\n\n__decorate([Output()], EntityAddValuesComponent.prototype, \"isReturn\", void 0);\n\nEntityAddValuesComponent = __decorate([Component({\n  selector: 'app-entity-add-values',\n  templateUrl: './entity-add-values.component.html',\n  styleUrls: ['./entity-add-values.component.scss']\n})], EntityAddValuesComponent);\nexport { EntityAddValuesComponent };","map":{"version":3,"sources":["D:/Repositories/Trabajo/ecatch-web-config/src/app/modules/wizard/entidades/components/entity-add-values/entity-add-values.component.ts"],"names":["__decorate","Component","EventEmitter","Input","Output","EntityAddValuesComponent","constructor","_localStorage","autofillsService","nameClient","nameProject","isReturn","onSelectAutofills","attributes","isDelete","showValues","attributeAutofills","ResponsevaluesAttributesAutofills","valuesAttributesAutofills","ResponseAtrributesOfAutofills","AttributesOfAutofills","hasAttribute","columnsTable","getClient","getProject","ngOnInit","isBlock","selectedAutofill","getAttributeAutofills","getAutofillValues","getAllAutofillValues","id","toLowerCase","subscribe","res","_a","_b","data","autofill_response","length","forEach","value","valueTemp","created_at","updated_at","push","Object","keys","console","log","getAttributeAutofillsByAutofillID","autofill","attribute","onReturn","emit","from","cancelDelete","sureDelete","i","onAddDatasets","onCreateValue","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nlet EntityAddValuesComponent = class EntityAddValuesComponent {\r\n    constructor(_localStorage, autofillsService) {\r\n        this._localStorage = _localStorage;\r\n        this.autofillsService = autofillsService;\r\n        this.nameClient = '';\r\n        this.nameProject = '';\r\n        this.isReturn = new EventEmitter();\r\n        this.onSelectAutofills = false;\r\n        this.attributes = [];\r\n        this.isDelete = false;\r\n        this.showValues = true;\r\n        this.attributeAutofills = [];\r\n        this.ResponsevaluesAttributesAutofills = [];\r\n        this.valuesAttributesAutofills = [];\r\n        this.ResponseAtrributesOfAutofills = [];\r\n        this.AttributesOfAutofills = [];\r\n        this.hasAttribute = true;\r\n        this.columnsTable = [];\r\n        this.nameClient = this._localStorage.getClient();\r\n        this.nameProject = this._localStorage.getProject();\r\n    }\r\n    ngOnInit() {\r\n        this.isBlock = true;\r\n        if (this.selectedAutofill) {\r\n            this.getAttributeAutofills();\r\n            this.getAutofillValues();\r\n        }\r\n        else {\r\n            this.isBlock = false;\r\n        }\r\n    }\r\n    getAutofillValues() {\r\n        this.autofillsService.getAllAutofillValues(this.selectedAutofill.id.toLowerCase()).subscribe((res) => {\r\n            var _a, _b;\r\n            if ((_b = (_a = res.data) === null || _a === void 0 ? void 0 : _a.autofill_response) === null || _b === void 0 ? void 0 : _b.length) {\r\n                this.ResponsevaluesAttributesAutofills = res.data.autofill_response;\r\n                this.ResponsevaluesAttributesAutofills.forEach((value) => {\r\n                    let valueTemp = value;\r\n                    delete valueTemp.id;\r\n                    delete valueTemp.created_at;\r\n                    delete valueTemp.updated_at;\r\n                    this.valuesAttributesAutofills.push(valueTemp);\r\n                });\r\n                this.columnsTable = Object.keys(this.valuesAttributesAutofills[0]);\r\n                console.log('columnsTable');\r\n                console.log(this.columnsTable);\r\n                console.log('valuesAttributesAutofills');\r\n                console.log(this.valuesAttributesAutofills);\r\n            }\r\n            else {\r\n                this.ResponsevaluesAttributesAutofills = [];\r\n            }\r\n        });\r\n    }\r\n    async getAttributeAutofills() {\r\n        this.autofillsService.getAttributeAutofillsByAutofillID(this.selectedAutofill.id.toLowerCase()).subscribe(async (res) => {\r\n            this.ResponseAtrributesOfAutofills = res.data;\r\n            for (const autofill of this.ResponseAtrributesOfAutofills) {\r\n                this.AttributesOfAutofills.push(autofill.attribute);\r\n            }\r\n            console.log('AttributesOfAutofills');\r\n            console.log(this.AttributesOfAutofills);\r\n            this.isBlock = false;\r\n        });\r\n        this.isBlock = false;\r\n    }\r\n    onReturn() {\r\n        this.isReturn.emit({\r\n            id: 'autofills',\r\n            from: 'addValues',\r\n            value: true\r\n        });\r\n    }\r\n    cancelDelete() {\r\n        this.isDelete = false;\r\n    }\r\n    sureDelete(i) {\r\n        if (this.attributes) {\r\n            this.isDelete = true;\r\n        }\r\n    }\r\n    onAddDatasets(i) {\r\n        this.showValues = false;\r\n    }\r\n    onCreateValue() {\r\n    }\r\n};\r\n__decorate([\r\n    Input()\r\n], EntityAddValuesComponent.prototype, \"selectedAutofill\", void 0);\r\n__decorate([\r\n    Output()\r\n], EntityAddValuesComponent.prototype, \"isReturn\", void 0);\r\nEntityAddValuesComponent = __decorate([\r\n    Component({\r\n        selector: 'app-entity-add-values',\r\n        templateUrl: './entity-add-values.component.html',\r\n        styleUrls: ['./entity-add-values.component.scss']\r\n    })\r\n], EntityAddValuesComponent);\r\nexport { EntityAddValuesComponent };\r\n"]},"metadata":{},"sourceType":"module"}